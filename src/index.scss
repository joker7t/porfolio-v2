@import './util/scss/colors';
@import './util/scss/transition';
@import './util/scss/respond';
@import './util/scss/keyframes';

@font-face {
	font-family: 'Cosi Azure';
	src: local('Cosi Azure'), url(./resources/fonts/Cosi-Azure/Cosi-Azure-Black-Stencil.otf) format('opentype');
}

@font-face {
	font-family: 'Cosi Azure';
	font-weight: 900;
	src: local('Cosi Azure'), url(./resources/fonts/Cosi-Azure/Cosi-Azure-Black.otf) format('opentype');
}

@font-face {
	font-family: 'Cosi Azure';
	font-weight: 900;
	src: local('Cosi Azure'), url(./resources/fonts/Cosi-Azure/Cosi-Azure-Bold.otf) format('opentype');
}

// import Boostrap and custom it
// change the theme
$theme-colors: (
	'primary': $color-primary,
);

// Import Bootstrap and its default variables
@import '~bootstrap/scss/bootstrap.scss';
//end Bootstrap

// body{
//   box-sizing: border-box;
//   font-family: 'Raleway', sans-serif;
//   margin: 0;
//   padding: 0;
//   font-size: 16px;
//   cursor: none;
//   width: 100%;
//   min-height: 100vh;
// }

a {
	text-decoration: none;
	cursor: none;
}

body {
	font-size: 1.6rem;
	font-family: 'Open Sans', sans-serif;
	color: #4089a6;
	background-color: #ffffff;
	-webkit-font-smoothing: antialiased;

	&:before,
	&:after {
		content: '';
		height: 50vh;
		width: 100%;
		position: fixed;
		left: 0;
		background: #1c2020;
		z-index: 1;
	}

	&:before {
		top: 0;
		transform: translateY(-100%);
	}
	&:after {
		bottom: 0;
		transform: translateY(100%);
	}

	/*&.is-changing{
    &:before,
    &:after{
      transform: translateY(0);
    }
  }*/
}
h1 {
	color: #1c2020;
	margin-bottom: 1em;
	font-size: 2.2rem;
	font-weight: 100;
}
.btn {
	display: inline-block;
	padding: 1.4em 1.6em;
	margin-bottom: 2em;
	border-radius: 50em;
	background-color: lighten(#1c2020, 10%);
	color: #ffffff;
	font-weight: bold;
	font-size: 0.8rem;
	letter-spacing: 1px;
	text-transform: uppercase;
	text-decoration: none;

	&:hover {
		background-color: lighten(#1c2020, 15%);
	}
}
.loader {
	margin: 0 auto;
	width: 60px;
	height: 50px;
	text-align: center;
	font-size: 10px;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translateY(-50%) translateX(-50%);
	z-index: 500;
	opacity: 0;

	> div {
		height: 100%;
		width: 8px;
		display: inline-block;
		margin-left: 2px;
		animation: delay 0.8s infinite ease-in-out;
	}

	.bar1 {
		background-color: #754fa0;
	}
	.bar2 {
		background-color: #09b7bf;
		animation-delay: -0.7s;
	}
	.bar3 {
		background-color: #90d36b;
		animation-delay: -0.6s;
	}
	.bar4 {
		background-color: #f2d40d;
		animation-delay: -0.5s;
	}
	.bar5 {
		background-color: #fcb12b;
		animation-delay: -0.4s;
	}
	.bar6 {
		background-color: #ed1b72;
		animation-delay: -0.3s;
	}
}
main {
	height: 100vh;
	/* padding: 10px; */
	text-align: center;

	.-content {
		position: relative;
		height: 100vh;

		> div {
			height: 100%;
			overflow: hidden;
			overflow-y: auto;
		}

		&.-index {
			background-color: #f6f6f6;
			display: table;
			width: 100%;

			> div {
				display: table-cell;
				vertical-align: middle;
			}
		}
	}
}

//aaaaaaaa
//aaaaaaaaaa

@mixin animation($animate...) {
	$max: length($animate);
	$animations: '';
	@for $i from 1 through $max {
		$animations: #{$animations + nth($animate, $i)};
		@if $i < $max {
			$animations: #{$animations + ', '};
		}
	}
	-webkit-animation: $animations;
	-moz-animation: $animations;
	-o-animation: $animations;
	animation: $animations;
}

@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}

@mixin keyframes($animationName) {
	@-webkit-keyframes #{$animationName} {
		@content;
	}
	@-moz-keyframes #{$animationName} {
		@content;
	}
	@-o-keyframes #{$animationName} {
		@content;
	}
	@keyframes #{$animationName} {
		@content;
	}
}

//theme
$yellow: #f5d300;
$black: #292929;
$bg: #191919;
$lines: #757474;
body {
	background-color: $bg;
	font-family: 'Open Sans', sans-serif;
}

.text {
	opacity: 0;
	z-index: 7;
	text-align: left;
	width: 100%;
	height: 100vh;
	font-size: 48px;
	font-weight: 700;
	p {
		white-space: nowrap;
		overflow: hidden;
		width: 100%;
		@include animation('type .3s steps(60, end) 3.7s');
	}
	p:nth-child(2) {
		@include animation('type2 .5s steps(60, end) 3.7s');
	}
	@include animation('on .6s ease-in-out 3.7s forwards');

	button {
		border: 0;
		opacity: 0;
		background: $bg;
		color: $yellow;
		border: 1px solid $bg;
		letter-spacing: 2px;
		padding: 0.5rem 2.5rem;
		font-size: 12px;
		font-weight: 600;
		text-transform: uppercase;
		cursor: pointer;
		@include transition(color 0.5s, background-color 0.5s);
		@include animation('on .6s ease-in-out 4s forwards');
		&:hover {
			background: $yellow;
			color: $bg;
			border: 1px solid $bg;
		}
	}
}

.splash {
	width: 100vw;
	height: 100vh;
	position: fixed;
	top: 0;
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	overflow: hidden;
	&_logo {
		position: absolute;
		margin: -15px 0 0 -25px;
		top: 50vh;
		z-index: 5;
		left: 50vw;
		width: 50px;
		text-align: center;
		height: 30px;
		font-size: 26px;
		font-weight: 600;
		color: #ffffff;
		opacity: 1;
		will-change: opacity;
		@include animation('logo .3s ease-in 1.5s forwards, off .6s ease-in-out 3.2s forwards');
		&:before {
			display: block;
			position: absolute;
			left: 15px;
			bottom: -5px;
			width: 20px;
			height: 1px;
			background-color: $lines;
			content: '';
		}
		&:after {
			display: block;
			position: absolute;
			left: 15px;
			top: -5px;
			width: 20px;
			height: 1px;
			background-color: $lines;
			content: '';
			will-change: width;
		}
	}
	&_svg {
		position: relative;
		margin: auto;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		bottom: 0;
		right: 0;
		svg {
			width: 100%;
			height: 100%;
			-webkit-backface-visibility: visible;
			backface-visibility: visible;
			rect {
				width: 100%;
				height: 100%;
				fill: $yellow;
				stroke: 0;
				-webkit-clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
				clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
				@include animation('expand .7s ease-in forwards 2.7s');
			}
		}
	}
	&_minimize {
		position: absolute;
		margin: auto;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		z-index: 4;
		svg {
			width: 100%;
			height: 100%;
			-webkit-backface-visibility: visible;
			backface-visibility: visible;
			rect {
				width: 100%;
				height: 100%;
				-webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
				clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
				@include animation('scale .2s ease-out forwards 1s, hide 1.3s ease-out forwards 1.2s');
			}
		}
	}
}

@include keyframes(scale) {
	100% {
		-webkit-clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
		clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
	}
}

@include keyframes(hide) {
	100% {
		fill: transparent;
	}
}

@include keyframes(off) {
	100% {
		opacity: 0;
	}
}

@include keyframes(on) {
	100% {
		opacity: 1;
	}
}

@include keyframes(logo) {
	100% {
		color: $black;
	}
}

@include keyframes(type) {
	0% {
		width: 0;
	}
}

@include keyframes(type2) {
	0% {
		width: 0;
	}
	50% {
		width: 0;
	}
	100% {
		width: 100;
	}
}

@include keyframes(expand) {
	0% {
	}
	25% {
		-webkit-clip-path: polygon(0vw 0vh, 55vw 40vh, 55vw 58vh, 45vw 58vh);
		clip-path: polygon(0vw 0vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
		fill: white;
	}
	50% {
		-webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 45vw 60vh);
		clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 45vw 60vh);
		fill: $yellow;
	}
	75% {
		-webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 0vw 100vh);
		clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 0vw 100vh);
		fill: white;
	}
	100% {
		-webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
		clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
		fill: $yellow;
	}
}
